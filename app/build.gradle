plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

def android_builder_version = "4.0.1"

ext {
    android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
    android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
}

android {
    this.rootProject.buildscript.configurations.classpath
            .resolvedConfiguration
            .firstLevelModuleDependencies.
            each {
                def name = it.name
                if (name.contains('com.android.tools.build:gradle')) {
                    def moduleVersion = it.moduleVersion
                    if (moduleVersion.contains("-")) {
                        def versionArray = moduleVersion.split("-")
                        ext.android_builder_main_version = Integer.parseInt(versionArray[0])
                        ext.android_builder_mid_version = Integer.parseInt(versionArray[1])
                    } else {
                        version = moduleVersion
                        android_builder_version = moduleVersion
                        ext.android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
                        ext.android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
                    }
                }
            }
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.androiddevchallenge"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    if (ext.android_builder_main_version >= 7 || (ext.android_builder_main_version > 4 && ext.android_builder_mid_version > 1)) {
        buildFeatures {
            compose true
        }
    }

    buildFeatures {
        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.3.0'
    if (android_builder_main_version < 7) {
        add("kotlinCompilerPluginClasspath", "androidx.compose.compiler:compiler:$compose_version")
    }
    implementation "androidx.appcompat:appcompat:$compose_appcompat_version"
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    // ...compiler and runtime from previous code snippet
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-saveable:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-text:$compose_version"
    implementation "androidx.compose.ui:ui-geometry:$compose_version"
    implementation "androidx.compose.ui:ui-graphics:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.ui:ui-unit:$compose_version"
    // Animation
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.animation:animation-core:$compose_version"
    // Navigation
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.material:material-ripple:$compose_version"

    implementation "androidx.compose.ui:ui-viewbinding:$compose_version"

    // Constraintlayout
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraintlayout_version"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_lifecycle_version"

    //accompanist  -- Utils for Jetpack Compose
    implementation "com.google.accompanist:accompanist-coil:$compose_accompanist"

    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"


    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'
}